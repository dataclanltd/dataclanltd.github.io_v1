{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","M","AutoInit","className","role","id","to","href","data-target","class","src","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8QAkLeA,E,kLAvKXC,IAAEC,a,+BAKF,OACE,kBAAC,WAAD,KAEE,yBAAKC,UAAU,QAAQC,KAAK,cAC1B,yBAAKD,UAAU,yBACb,kBAAC,IAAD,CAAME,GAAG,iBAAiBC,GAAG,IAAIH,UAAU,cAA3C,gBAGA,wBAAIA,UAAU,4CACZ,4BACE,kBAAC,IAAD,CAAMG,GAAG,KAAT,gBAIJ,wBAAID,GAAG,aAAaF,UAAU,WAC5B,4BACE,kBAAC,IAAD,CAAMG,GAAG,KAAT,iBAGJ,kBAAC,IAAD,CAAMC,KAAK,IAAIC,cAAY,aAAaL,UAAU,mBAChD,uBAAGA,UAAU,kBAAb,WAKN,yBAAKE,GAAG,eAAeI,MAAM,sBAC3B,yBAAKA,MAAM,sBACT,yBAAKA,MAAM,aACT,6BACA,6BACA,wBAAIA,MAAM,0CAAV,8BAGA,yBAAKA,MAAM,cACT,wBAAIA,MAAM,wBAAV,2FAKF,yBAAKA,MAAM,cACT,kBAAC,IAAD,CACEF,KAAK,GACLF,GAAG,kBACHI,MAAM,qDAHR,eAQF,6BACA,+BAGJ,yBAAKA,MAAM,YACT,yBAAKC,IAAI,kBAAkBC,IAAI,kCAInC,yBAAKF,MAAM,aACT,wBAAIA,MAAM,0CAAV,cACA,yBAAKA,MAAM,WAET,yBAAKA,MAAM,OACT,yBAAKA,MAAM,cACT,yBAAKA,MAAM,cACT,wBAAIA,MAAM,qBACR,uBAAGA,MAAM,kBAAT,aAEF,wBAAIA,MAAM,UAAV,kBAEA,uBAAGA,MAAM,SAAT,yNASJ,yBAAKA,MAAM,cACT,yBAAKA,MAAM,cACT,wBAAIA,MAAM,qBACR,uBAAGA,MAAM,kBAAT,UAEF,wBAAIA,MAAM,UAAV,oBAEA,uBAAGA,MAAM,SAAT,qSAUJ,yBAAKA,MAAM,cACT,yBAAKA,MAAM,cACT,wBAAIA,MAAM,qBACR,uBAAGA,MAAM,kBAAT,aAEF,wBAAIA,MAAM,UAAV,wBAEA,uBAAGA,MAAM,SAAT,qNAYV,yBAAKA,MAAM,qCACT,yBAAKA,MAAM,sBACT,yBAAKA,MAAM,aACT,yBAAKA,MAAM,cACT,wBAAIA,MAAM,wBAAV,2FAON,yBAAKA,MAAM,YACT,yBAAKC,IAAI,kBAAkBC,IAAI,kCAKnC,4BAAQR,UAAU,oBAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,cAAd,eACA,uBAAGA,UAAU,4BAAb,wOASN,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aAAf,cACc,IACZ,uBACEA,UAAU,4BACVI,KAAK,6BAFP,wB,GA5JIK,aCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9ab1709c.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"materialize-css/dist/css/materialize.min.css\";\r\nimport \"./style.css\";\r\n\r\n// Import Materialize\r\nimport M from \"materialize-css\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n  render() {\r\n    //const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        {/* Nav bar */}\r\n        <nav className=\"white\" role=\"navigation\">\r\n          <div className=\"nav-wrapper container\">\r\n            <Link id=\"logo-container\" to=\"#\" className=\"brand-logo\">\r\n              Dataclan Ltd\r\n            </Link>\r\n            <ul className=\"right hide-on-med-and-down text-darken-2\">\r\n              <li>\r\n                <Link to=\"#\">Contact us</Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul id=\"nav-mobile\" className=\"sidenav\">\r\n              <li>\r\n                <Link to=\"#\">Navbar Link</Link>\r\n              </li>\r\n            </ul>\r\n            <Link href=\"#\" data-target=\"nav-mobile\" className=\"sidenav-trigger\">\r\n              <i className=\"material-icons\">menu</i>\r\n            </Link>\r\n          </div>\r\n        </nav>\r\n\r\n        <div id=\"index-banner\" class=\"parallax-container\">\r\n          <div class=\"section no-pad-bot\">\r\n            <div class=\"container\">\r\n              <br />\r\n              <br />\r\n              <h1 class=\"header center teal-text text-lighten-2\">\r\n                A Ugandan based AI startup\r\n              </h1>\r\n              <div class=\"row center\">\r\n                <h5 class=\"header col s12 light\">\r\n                  A pace setter in realtime analytics leveraging machine\r\n                  learning powered data pipelines\r\n                </h5>\r\n              </div>\r\n              <div class=\"row center\">\r\n                <Link\r\n                  href=\"\"\r\n                  id=\"download-button\"\r\n                  class=\"btn-large waves-effect waves-light teal lighten-1\"\r\n                >\r\n                  Contact us\r\n                </Link>\r\n              </div>\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n          <div class=\"parallax\">\r\n            <img src=\"background1.jpg\" alt=\"Unsplashed background img 1\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"container\">\r\n          <h3 class=\"header center teal-text text-lighten-2\">Portfolios</h3>\r\n          <div class=\"section\">\r\n            {/* Icon Section*/}\r\n            <div class=\"row\">\r\n              <div class=\"col s12 m4\">\r\n                <div class=\"icon-block\">\r\n                  <h2 class=\"center brown-text\">\r\n                    <i class=\"material-icons\">flash_on</i>\r\n                  </h2>\r\n                  <h5 class=\"center\">Data Analytics</h5>\r\n\r\n                  <p class=\"light\">\r\n                    We did most of the heavy lifting for you to provide a\r\n                    default stylings that incorporate our custom components.\r\n                    Additionally, we refined animations and transitions to\r\n                    provide a smoother experience for developers.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col s12 m4\">\r\n                <div class=\"icon-block\">\r\n                  <h2 class=\"center brown-text\">\r\n                    <i class=\"material-icons\">group</i>\r\n                  </h2>\r\n                  <h5 class=\"center\">Machine Learning</h5>\r\n\r\n                  <p class=\"light\">\r\n                    By utilizing elements and principles of Material Design, we\r\n                    were able to create a framework that incorporates components\r\n                    and animations that provide more feedback to users.\r\n                    Additionally, a single underlying responsive system across\r\n                    all platforms allow for a more unified user experience.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col s12 m4\">\r\n                <div class=\"icon-block\">\r\n                  <h2 class=\"center brown-text\">\r\n                    <i class=\"material-icons\">settings</i>\r\n                  </h2>\r\n                  <h5 class=\"center\">Software Development</h5>\r\n\r\n                  <p class=\"light\">\r\n                    We have provided detailed documentation as well as specific\r\n                    code examples to help new users get started. We are also\r\n                    always open to feedback and can answer any questions a user\r\n                    may have about Materialize.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"parallax-container valign-wrapper\">\r\n          <div class=\"section no-pad-bot\">\r\n            <div class=\"container\">\r\n              <div class=\"row center\">\r\n                <h5 class=\"header col s12 light\">\r\n                  A Ugandan AI start-up with over 10 years experience innovating\r\n                  technology solutions.\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"parallax\">\r\n            <img src=\"background3.jpg\" alt=\"Unsplashed background img 3\" />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <footer className=\"page-footer teal\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col l6 s12\">\r\n                <h5 className=\"white-text\">Company Bio</h5>\r\n                <p className=\"grey-text text-lighten-4\">\r\n                  We are a team of software engineers coming from diverse\r\n                  backgrounds including engineering, computer science among\r\n                  others working on building soltions to complex problems using\r\n                  data science, software development and analytics.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-copyright\">\r\n            <div className=\"container\">\r\n              Designed by{\" \"}\r\n              <a\r\n                className=\"brown-text text-lighten-3\"\r\n                href=\"http://materializecss.com\"\r\n              >\r\n                Dataclan Ltd\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}